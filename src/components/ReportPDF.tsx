import React from 'react';

// This is a simplified interface for the report data.
// It should match the structure of the data passed from the API.
interface ReportData {
  technologies: {
    name: string;
    slug: string;
    versions: string[];
    categories: { name: string }[];
  }[];
  performance: {
    performance: number;
    accessibility: number;
    seo: number;
    lcp: string;
    cls: string;
  } | null;
}

interface ReportPDFProps {
  url: string;
  data: ReportData;
}

const ReportPDF: React.FC<ReportPDFProps> = ({ url, data }) => {
  return (
    <html lang="en">
      {/* eslint-disable-next-line @next/next/no-head-element */}
      <head>
        <meta charSet="UTF-8" />
        <title>Website Health Report for {url}</title>
        <style>
          {`
            body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; font-size: 14px; color: #333; }
            .container { width: 90%; margin: 0 auto; }
            .header { text-align: center; border-bottom: 2px solid #eee; padding-bottom: 20px; margin-bottom: 20px; }
            .header h1 { font-size: 28px; color: #111; margin: 0; }
            .header p { font-size: 16px; color: #555; margin: 5px 0 0; }
            .section { margin-bottom: 30px; }
            .section h2 { font-size: 22px; color: #222; border-bottom: 1px solid #ddd; padding-bottom: 10px; margin-bottom: 15px; }
            .grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; text-align: center; }
            .score-card { padding: 15px; border-radius: 8px; background-color: #f9f9f9; }
            .score-card p { margin: 0; font-size: 16px; font-weight: bold; }
            .score-card .score { font-size: 40px; font-weight: bold; }
            .score-green { color: #28a745; }
            .score-yellow { color: #ffc107; }
            .score-red { color: #dc3545; }
            .tech-list { display: flex; flex-wrap: wrap; gap: 10px; }
            .tech-item { background-color: #e7f3ff; color: #005a9e; padding: 5px 10px; border-radius: 15px; font-size: 12px; }
            .footer { text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #eee; font-size: 12px; color: #777; }
          `}
        </style>
      </head>
      <body>
        <div className="container">
          <div className="header">
            <h1>Website Health Report</h1>
            <p>{url}</p>
          </div>

          {data.performance && (
            <div className="section">
              <h2>Performance & SEO Analysis</h2>
              <div className="grid">
                <div className="score-card">
                  <p>Performance</p>
                  <div className={`score ${data.performance.performance > 89 ? 'score-green' : data.performance.performance > 49 ? 'score-yellow' : 'score-red'}`}>
                    {data.performance.performance}
                  </div>
                </div>
                <div className="score-card">
                  <p>Accessibility</p>
                   <div className={`score ${data.performance.accessibility > 89 ? 'score-green' : data.performance.accessibility > 49 ? 'score-yellow' : 'score-red'}`}>
                    {data.performance.accessibility}
                  </div>
                </div>
                <div className="score-card">
                  <p>SEO</p>
                   <div className={`score ${data.performance.seo > 89 ? 'score-green' : data.performance.seo > 49 ? 'score-yellow' : 'score-red'}`}>
                    {data.performance.seo}
                  </div>
                </div>
              </div>
            </div>
          )}

          <div className="section">
            <h2>Detected Technologies</h2>
            <div className="tech-list">
              {data.technologies.length > 0 ? (
                data.technologies.map(tech => (
                  <div key={tech.slug} className="tech-item">
                    {tech.name}
                  </div>
                ))
              ) : (
                <p>No specific technologies detected.</p>
              )}
            </div>
          </div>
          
          <div className="footer">
            <p>Generated by Client Compass | &copy; {new Date().getFullYear()}</p>
          </div>
        </div>
      </body>
    </html>
  );
};

export default ReportPDF; 